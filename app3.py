# -*- coding: utf-8 -*-
"""app3

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UDkBXO6Sdx-9WyEVr33kjURq3aSP4fIe
"""

import streamlit as st
import pandas as pd
import os
from gif_generator import generate_gif

st.set_page_config(page_title="Calidad del Aire Bogot√°", layout="wide")
st.title("üå¨Ô∏è Calidad del Aire en Bogot√°")

# Carpeta local de CSVs
RUTA_BASE = "/content/drive/MyDrive/DatosCA"

# Selecci√≥n de fecha
fecha_str = st.date_input("Seleccione la fecha").strftime("%Y-%m-%d")

# Rutas de archivos
archivo_aire = os.path.join(RUTA_BASE, f"Datos_Aire_{fecha_str}.csv")
archivo_met = os.path.join(RUTA_BASE, f"Datos_Meteorologicos_{fecha_str}.csv")

# Verificar existencia
if not os.path.exists(archivo_aire):
    st.error(f"No existe el archivo de calidad del aire: {archivo_aire}")
elif not os.path.exists(archivo_met):
    st.error(f"No existe el archivo meteorol√≥gico: {archivo_met}")
else:
    # Leer datos
    df_aire = pd.read_csv(archivo_aire, sep=';')
    df_met = pd.read_csv(archivo_met, sep=';')

    # Selecci√≥n de contaminante
    columnas_aire = df_aire.columns.tolist()
    posibles_contaminantes = [col for col in columnas_aire if col not in ['name', 'Hora']]
    contaminante = st.selectbox("Seleccione el contaminante", posibles_contaminantes)

    # Bot√≥n para generar GIF
    if st.button("Generar GIF"):
        st.info("Generando GIF, esto puede tardar unos segundos...")
        gif_path = os.path.join(RUTA_BASE, f"GIF_{contaminante}_{fecha_str}.gif")
        try:
            ruta_gif, df_air = generate_gif(df_aire, df_met, contaminante, gif_path)

            # Mostrar GIF
            st.image(ruta_gif, caption=f"GIF de {contaminante} - {fecha_str}")

            # Bot√≥n para descargar GIF
            with open(ruta_gif, "rb") as f:
                st.download_button(
                    label="üì• Descargar GIF",
                    data=f,
                    file_name=f"GIF_{contaminante}_{fecha_str}.gif",
                    mime="image/gif"
                )

            # Bot√≥n para descargar CSV
            csv_bytes = df_air.to_csv(index=False).encode('utf-8')
            st.download_button(
                label="üì• Descargar datos CSV",
                data=csv_bytes,
                file_name=f"Datos_Aire_{fecha_str}.csv",
                mime="text/csv"
            )

            st.success("GIF generado correctamente ‚úÖ")
        except Exception as e:
            st.error(f"Ocurri√≥ un error: {e}")